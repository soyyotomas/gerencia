<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:mvc="http://www.springframework.org/schema/mvc" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:p="http://www.springframework.org/schema/p" xmlns:mongo="http://www.springframework.org/schema/data/mongo"
	xsi:schemaLocation="
        	http://www.springframework.org/schema/beans     
        	http://www.springframework.org/schema/beans/spring-beans.xsd
        	http://www.springframework.org/schema/context 
        	http://www.springframework.org/schema/context/spring-context.xsd
        	http://www.springframework.org/schema/data/mongo 
        	http://www.springframework.org/schema/data/mongo/spring-mongo-1.0.xsd
        	http://www.springframework.org/schema/mvc 
        	http://www.springframework.org/schema/mvc/spring-mvc.xsd
        	http://www.springframework.org/schema/tx 
        	http://www.springframework.org/schema/tx/spring-tx.xsd">

	<context:annotation-config />

	<tx:annotation-driven />
	<mvc:annotation-driven />

	<!--Component scanning with <context:component-scan base-package="com.rocketAlan" 
		/> is telling spring that it should search the class path for all the classes 
		under "com.rocketAlan" and look at each class to see if it has a @Controller, 
		or @Repository, or @Service, or @Component and if it does then Spring will 
		register the class with the bean factory as if you had typed <bean class="..." 
		/> in the xml configuration files. -->
	<!-- Specify base package of the components DAO, Controller, etc -->
	<context:component-scan base-package="com.rocketOzzy.config" />
	<context:component-scan base-package="com.rocketOzzy.controller" />
	<context:component-scan base-package="com.rocketOzzy.dao" />
	<context:component-scan base-package="com.rocketOzzy.rest" />
	<context:component-scan base-package="com.rocketOzzy.service" />

	<bean id="viewResolver"
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
		<property name="prefix" value="/jsp/" />
		<property name="suffix" value=".jsp" />
	</bean>

	<!-- Maps static resources like images, css, javascript files -->
	<mvc:resources mapping="/resources/**" location="/resources/" />

	<!-- Setting the connection with MONGODB -->
	<bean id="mongoClient" class="com.mongodb.MongoClient">

		<constructor-arg name="host" value="localhost" />
		<constructor-arg name="port" value="27017" />
	</bean>

	<bean id="mongoDbFactory"
		class="org.springframework.data.mongodb.core.SimpleMongoDbFactory">
		<constructor-arg ref="mongoClient" />
		<constructor-arg type="java.lang.String" value="rocketOzzy" />
	</bean>

	<bean id="mongoTemplate" class="org.springframework.data.mongodb.core.MongoTemplate">
		<constructor-arg ref="mongoDbFactory" />
	</bean>

	<bean
		class="org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor" />

</beans>